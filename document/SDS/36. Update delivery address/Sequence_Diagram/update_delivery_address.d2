vars: {
  page-name: DeliveryAddressListPage
  controller-name: CustomerController
  daDAO-name: daDAO:DeliveryAddressDAO
  cDao-name: cDAO:CustomerDAO
}

label.style.font-color: black

classes: {
  text-black: {
    style: {
      font-color: black
    }
  }

  return arrow: {
    style: {
      stroke-dash: 3
      stroke: black
      font-color: black
    }
  }

  frame: {
    style: {
      fill: '#EAEDF0'
      stroke-width: 1
    }
  }

  label right: {
    style.font-color: black
  }

  ref: {
    style.multiple: true
  }
}

shape: sequence_diagram

Customer: {
  shape: image
  width: 50
  height: 60
  icon: https://upload.wikimedia.org/wikipedia/commons/5/5b/Robustness_Diagram_Actor.svg
}

page: ${page-name}
controller: ${controller-name}
cDAO: ${cDao-name}
daDAO: ${daDAO-name}

db: DB {
  width: 100
  height: 50
  shape: cylinder
}

controller.doPost.updateCustomerDeliveryAddress -> daDAO.getDeliveryAdress: 8. getDeliveryAddress(customerId) {class: text-black}

daDAO.getDeliveryAdress -> db.getDeliveryAdress: 9. excecuteQuery() {class: text-black}
daDAO.getDeliveryAdress <- db.getDeliveryAdress: 10. return ResultSet {class: return arrow}

alt2: "alt" {
  class: frame

  ResultSet is null: {
    class: frame
    controller.doPost.updateCustomerDeliveryAddress <- daDAO.getDeliveryAdress: 11. return null {class: return arrow}
    page.view <- controller.doPost.updateCustomerDeliveryAddress: 11.1. return to page {class: return arrow}
    Customer <- page.view: 11.2. show error to Customer {class: return arrow}
  }
  else2: "else" {
    class: frame
    controller.doPost.updateCustomerDeliveryAddress <- daDAO.getDeliveryAdress: 11. return DeliveryAddress {class: return arrow}

    alt3: "alt" {
      class: frame

      All delivery address is non-default \n(including the one that will be updated): {
        class: frame
        page.view <- controller.doPost.updateCustomerDeliveryAddress: 11.1. return to page {class: return arrow}
        Customer <- page.view: 11.2. show error to Customer {class: return arrow}
      }

      else3: "else" {
        class: frame
        controller.doPost.updateCustomerDeliveryAddress -> daDAO.updateDeliveryAddress: 12. updateDeliveryAddress(DeliveryAddress) {class: text-black}

        daDAO.updateDeliveryAddress -> db.updateDeliveryAddress: 13. excecuteQuery() {class: text-black}
        daDAO.updateDeliveryAddress <- db.updateDeliveryAddress: 14. return ResultSet {class: return arrow}

        alt4: "alt" {
          class: frame

          Update failed: {
            class: frame

            controller.doPost.updateCustomerDeliveryAddress <- daDAO.updateDeliveryAddress: 15. return false {class: return arrow}
            page.view <- controller.doPost.updateCustomerDeliveryAddress: 15.1. return to page {class: return arrow}
            Customer <- page.view: 15.2. show error to Customer {class: return arrow}
          }

          else4: "else" {
            class: frame
            controller.doPost.updateCustomerDeliveryAddress <- daDAO.updateDeliveryAddress: 15. return true {class: return arrow}

            controller.doPost.updateCustomerDeliveryAddress.REF\:\n Set current delivery address to default {
              class: ref
              shape: page
            }

            page.view <- controller.doPost.updateCustomerDeliveryAddress: 24. return to page {class: return arrow}
            Customer <- page.view: 25. show the new list to Customer {class: return arrow}
          }
        }
      }
    }
  }
}
