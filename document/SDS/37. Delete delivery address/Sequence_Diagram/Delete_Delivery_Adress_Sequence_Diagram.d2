vars: {
  page-name: DeliveryAddressListPage
  controller-name: CustomerController
  daDAO-name: daDAO:DeliveryAddressDAO
  cusDAO-name: cusDAO:CustomerDAO
}

label.style.font-color: black

classes: {
  text-black: {
    style: {
      font-color: black
    }
  }

  return arrow: {
    style: {
      stroke-dash: 3
      stroke: black
      font-color: black
    }
  }

  frame: {
    style: {
      fill: '#EAEDF0'
      stroke-width: 1
    }
  }

  label right: {
    style.font-color: black
  }
}

shape: sequence_diagram

user: {
  shape: image
  width: 50
  height: 60
  icon: https://upload.wikimedia.org/wikipedia/commons/5/5b/Robustness_Diagram_Actor.svg
}

page: ${page-name}
controller: ${controller-name}
cDAO: ${cusDAO-name}
daDAO: ${daDAO-name}
db: DB {
  width: 100
  height: 50
  shape: cylinder
}

user -> page.view: 1. select an existed delivery address\n and click delete button {class: text-black}
page.view -> controller.doPost: 2. doPost() {class: text-black}
# getCustomer
controller.doPost -> controller.doPost.deleteDeliveryAddress: 3. deleteDeliveryAddress() {class: text-black}
controller.doPost.deleteDeliveryAddress -> daDAO.deleteDeliveryAddress: 4. deleteDeliveryAddress() {class: text-black}
daDAO.deleteDeliveryAddress -> db.delete: 5. executeUpdate() {class: text-black}
daDAO.deleteDeliveryAddress <- db.delete: 6. return number of affected rows {class: return arrow}
alt1: "alt" {
  class: frame
  Affected row = 0: {
    controller.doPost.deleteDeliveryAddress <- daDAO.deleteDeliveryAddress: 6.1. return 0 affected row {class: return arrow}
    page.view <- controller.doPost.deleteDeliveryAddress: 6.1.1 return to page {class: return arrow}
    user <- page.view: 6.1.2. show error to user {class: return arrow}
  }
  else1: "else" {
    controller.doPost.deleteDeliveryAddress <- daDAO.deleteDeliveryAddress: 6.2. return affected rows {class: return arrow}

    opt: "opt" {
      class: frame
      if deleted delivery address is\n default delivery address: {
        class: frame
        controller.doPost.deleteDeliveryAddress -> cDAO.getCustomer: 6.2.1. getCustomer {class: text-black}
        cDAO.getCustomer -> db.getCustomer: 6.2.2. executeQuery {class: text-black}
        cDAO.getCustomer <- db.getCustomer: 6.2.3. return ResultSet {class: return arrow}
        alt2: "alt" {
          customer is null: {
            controller.doPost.deleteDeliveryAddress <- cDAO.getCustomer: 6.2.3.1. return null {class: return arrow}
            page.view <- controller.doPost.deleteDeliveryAddress: 6.2.3.1.1. return to page {class: return arrow}
            user <- page.view: 6.2.3.1.2. show error to user {class: return arrow}
          }
          else2: "else" {
            class:frame
            controller.doPost.deleteDeliveryAddress <- cDAO.getCustomer: 6.2.3.2 return Customer {class: return arrow}
            controller.doPost.deleteDeliveryAddress -> daDAO.getAll: 6.2.3.2.1 getAll() {class: text-black}
            daDAO.getAll -> db.getAll: 6.2.3.2.2. executeQuery {class: text-black}
            daDAO.getAll <- db.getAll: 6.2.3.2.3. executeQuery {class: return arrow}
            controller.doPost.deleteDeliveryAddress <- daDAO.getAll: 6.2.3.2.4. return list of delivery address {class: return arrow}
            opt: "opt" {
              class:frame
              if first item of the list not null: {
                controller.doPost.deleteDeliveryAddress -> daDAO.updateDeliveryAddress: 6.2.3.2.4.1. updateDeliveryAddress() {class: text-black}
                daDAO.updateDeliveryAddress -> db.updateDeliveryAddress: 6.2.3.2.4.1. executeUpdate {class:text-black}
                daDAO.updateDeliveryAddress <- db.updateDeliveryAddress: 6.2.3.2.4.2. return number of afftected row {class:return arrow}
                controller.doPost.deleteDeliveryAddress <- daDAO.updateDeliveryAddress: 6.2.3.2.4.3 return number of affected rows {class: return arrow}
              }
            } 
            page.view <- controller.doPost.deleteDeliveryAddress: 6.2.3.2.5 return to page {class: return arrow}
            user <- page.view: 6.2.3.2.6. return to delivery address page {class: return arrow}

          }
        }
      }
    }
    # controller.doPost.deleteDeliveryAddress -> daDAO.deleteDeliveryAddress: 9. deleteDeliveryAddress {class: text-black}
    # daDAO.deleteDeliveryAddress -> db.add: 10. executeUpdate {class: text-black}
    # daDAO.deleteDeliveryAddress <- db.add: 11. return number of affected rows {class: return arrow}
    # alt3: "alt" {
    #   affected row = 0 1: "affected row = 0" {
    #     controller.doPost.deleteDeliveryAddress <- daDAO.deleteDeliveryAddress: 12. return 0 affected row {class: return arrow}
    #     page.view <- controller.doPost: 12.1. return to page {class: return arrow}
    #     user <- page.view: 12.2. Show error that add delivery address failed {class: return arrow}
    #   }
    #   else3: "else" {
    #     controller.doPost.deleteDeliveryAddress <- daDAO.deleteDeliveryAddress: 13. return affected rows {class: return arrow}
    #     page.view <- controller.doPost: 13.1. return to page {class: return arrow}
    #     user <- page.view: 13.2. return to delivery address list page {class: return arrow}
    #   }
    # }
  }
}
